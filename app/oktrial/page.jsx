"use client";

import React, { useEffect, useState, useRef } from 'react';
import Image from 'next/image';
import logo from '/assets/logo.png';  // Update with your actual logo path
import { useRouter } from 'next/navigation';

const PreviewProposal = () => {
  const [proposalData, setProposalData] = useState(null);
  const [proposalIntroduction, setProposalIntroduction] = useState(''); // State to hold the introduction
  const [carOverview, setCarOverview] = useState(''); // State to hold the introduction
  const [customerRequirements, setCustomerRequirements] = useState(null); // State to hold customer requirements
  const [carSpecifications, setCarSpecifications] = useState(null); // State to hold car specifications
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [PID, setPID] = useState(''); // State to hold the unique PID
  const [generatedByEmail, setGeneratedByEmail] = useState('');  // State to hold the generated by email

  const router = useRouter();  // Initialize router

  // Reference to the proposal content that will be printed
  const printRef = useRef();

  useEffect(() => {
    const fetchProposal = async () => {
      try {
        // Fetch the sessionId and createdBy from session storage
        const sessionId = sessionStorage.getItem('sessionId');
        const createdBy = sessionStorage.getItem('userId');

        if (!sessionId || !createdBy) {
          throw new Error('Session data missing.');
        }

        // Send the session details to the backend to create the proposal
        const response = await fetch('/api/proposalRoutes/proposalPreviewRoute', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            sessionId,
            createdBy,
            carModel: 'Tata Altroz', // Replace with dynamic value if available
            carVersion: 'Altroz XE Petrol' // Replace with dynamic value if available
          })
        });

        if (response.ok) {
          const data = await response.json();
          setProposalData(data);
          setPID(data.PID);  // Set the unique PID from the response
          setGeneratedByEmail(data.generatedByEmail);  // Set the email fetched from the backend
          setProposalIntroduction(data.introduction);  // Set the introduction fetched from the backend
          setCarOverview(data.carOverview);
          setCustomerRequirements(data.customer_requirements); // Set customer requirements fetched from the backend
          setCarSpecifications(data.car_specifications); // Set car specifications fetched from the backend
        } else {
          throw new Error('Failed to fetch proposal data.');
        }
      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };

    fetchProposal();
  }, []);

  // Function to handle the printing of the proposal content
  const handlePrint = () => {
    const printContent = printRef.current.innerHTML;
    const originalContent = document.body.innerHTML;

    document.body.innerHTML = printContent;
    window.print();
    document.body.innerHTML = originalContent;
    window.location.reload();  // Reload to restore the original content
  };

  // Navigate to the validateProposal page
  const handleValidate = () => {
    router.push('/validateProposal');  // Use router to navigate to the validateProposal page
  };

  // Navigate to the recommendation page
  const handleBack = () => {
    router.push('/recommendationPage');  // Navigate to the recommendation page
  };

  // Get current date and time for footer
  const getCurrentDate = () => {
    const date = new Date();
    return date.toLocaleString();  // Format: MM/DD/YYYY, HH:MM:SS AM/PM
  };

  if (loading) {
    return <div className="flex justify-center items-center h-screen text-lg font-semibold">Loading proposal...</div>;
  }

  if (error) {
    return <div className="flex justify-center items-center h-screen text-red-500 text-xl">{error}</div>;
  }

  return (
    <div className="p-4 flex flex-col items-center justify-between h-screen bg-gray-50">
      {/* Proposal content wrapped in a beautifully styled container */}
      <div ref={printRef} className="bg-white p-6 border border-gray-300 rounded-xl shadow-lg w-full max-w-4xl">
        
        {/* Header Section */}
        <div className="w-full flex justify-between items-center mb-6">
          {/* Left: Logo */}
          <div className="flex items-center">
            <Image src={logo} alt="AutoProposalAI Logo" width={120} height={100} />
          </div>

          {/* Center: Title */}
          <div className="flex-grow flex justify-center">
            <h3 className="text-2xl font-bold text-blue-600">Gen AI Based Customized Car Proposal</h3>
          </div>

          {/* Right: PID */}
          <div className="text-gray-600 font-semibold text-sm">
            PID: {PID} {/* Dynamically display the unique PID */}
          </div>
        </div>
        <hr className="border-t border-blue-600 mb-4"/>
        
        {/* 1. Important Section */}
        <h3 className="text-lg font-semibold mb-3 underline">Important:</h3>
        <ul className="list-disc ml-4 mb-6">
          <li>Please review the entire proposal thoroughly to understand the features, specifications, and customizations offered.</li>
          <li>All prices and offers mentioned in this proposal are indicative and subject to confirmation by the respective car manufacturer or dealer.</li>
          <li>This proposal is valid for 30 days from the date of generation and may be subject to changes based on updated data or customer preferences.</li>
        </ul>

        {/* 2. Customer Details Section */}
        <hr className="border-t border-blue-600 mb-4"/>
        <h2 className="text-lg font-semibold mb-3">A. Customer Details</h2>
        <table className="table-auto w-full mb-6 border-collapse border border-gray-300">
          <tbody>
            <tr>
              <td className="font-semibold border border-gray-300 p-1">Name:</td>
              <td className="border border-gray-300 p-1">{`${proposalData.customer_details.designation} ${proposalData.customer_details.fullName}`}</td>
            </tr>
            <tr>
              <td className="font-semibold border border-gray-300 p-1">Date of Birth:</td>
              <td className="border border-gray-300 p-1">{new Date(proposalData.customer_details.dob).toLocaleDateString()}</td>
            </tr>
            <tr>
              <td className="font-semibold border border-gray-300 p-1">Gender:</td>
              <td className="border border-gray-300 p-1">{proposalData.customer_details.gender}</td>
            </tr>
            <tr>
              <td className="font-semibold border border-gray-300 p-1">Nationality:</td>
              <td className="border border-gray-300 p-1">{proposalData.customer_details.nationality}</td>
            </tr>
            <tr>
              <td className="font-semibold border border-gray-300 p-1">Phone:</td>
              <td className="border border-gray-300 p-1">{proposalData.customer_details.mobileNo}</td>
            </tr>
            <tr>
              <td className="font-semibold border border-gray-300 p-1">Email:</td>
              <td className="border border-gray-300 p-1">{proposalData.customer_details.email}</td>
            </tr>
            <tr>
              <td className="font-semibold border border-gray-300 p-1">Address:</td>
              <td className="border border-gray-300 p-1">{proposalData.customer_details.residentialAddress}</td>
            </tr>
          </tbody>
        </table>

        {/* Introduction Section */}
        <hr className="border-t border-blue-600 mb-4"/>
        <h2 className="text-lg font-semibold mb-3">B. Introduction</h2>
        <p className="mb-4 leading-relaxed">{proposalIntroduction}</p>

        {/* Customer Requirement Summary Section */}
        <hr className="border-t border-blue-600 mb-4"/>
        {customerRequirements && (
          <>
            <h2 className="text-lg font-semibold mb-2">C. Customer Requirement Summary</h2>
            <div className="overflow-x-auto">
              <table className="table-auto w-full mb-4 border-collapse border border-gray-300 text-xs">
                <tbody>
                  <tr>
                    <td className="font-semibold border border-gray-300 p-1">Budget</td>
                    <td className="border border-gray-300 p-1">₹{customerRequirements.budgetMin} - ₹{customerRequirements.budgetMax}</td>
                    <td className="font-semibold border border-gray-300 p-1">Location</td>
                    <td className="border border-gray-300 p-1">{customerRequirements.location}</td>
                  </tr>
                  <tr>
                    <td className="font-semibold border border-gray-300 p-1">Body Style</td>
                    <td className="border border-gray-300 p-1">{customerRequirements.bodyStyle.join(', ')}</td>
                    <td className="font-semibold border border-gray-300 p-1">Fuel Type</td>
                    <td className="border border-gray-300 p-1">{customerRequirements.fuelType}</td>
                  </tr>
                  <tr>
                    <td className="font-semibold border border-gray-300 p-1">Seating Capacity</td>
                    <td className="border border-gray-300 p-1">{customerRequirements.seatingCapacity}</td>
                    <td className="font-semibold border border-gray-300 p-1">Transmission</td>
                    <td className="border border-gray-300 p-1">{customerRequirements.transmissionType}</td>
                  </tr>
                  <tr>
                    <td className="font-semibold border border-gray-300 p-1">Preferred Color</td>
                    <td className="border border-gray-300 p-1">{customerRequirements.carColor}</td>
                    <td className="font-semibold border border-gray-300 p-1">Primary Use</td>
                    <td className="border border-gray-300 p-1">{customerRequirements.primaryUse}</td>
                  </tr>
                  <tr>
                    <td className="font-semibold border border-gray-300 p-1">Driving Experience</td>
                    <td className="border border-gray-300 p-1">{customerRequirements.drivingExperience || 'N/A'}</td>
                    <td className="font-semibold border border-gray-300 p-1">Engine Power</td>
                    <td className="border border-gray-300 p-1">{customerRequirements.enginePower || 'N/A'}</td>
                  </tr>
                  <tr>
                    <td className="font-semibold border border-gray-300 p-1">Ground Clearance</td>
                    <td className="border border-gray-300 p-1">{customerRequirements.groundClearance || 'N/A'}</td>
                    <td className="font-semibold border border-gray-300 p-1">Battery Capacity</td>
                    <td className="border border-gray-300 p-1">{customerRequirements.batteryCapacity || 'N/A'}</td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div className="text-xs mb-4">
              <strong>Additional Features:</strong> {customerRequirements.additionalFeatures || 'None specified'}
            </div>
            <div className="text-xs mb-4">
              <strong>Safety Features:</strong> {customerRequirements.safetyFeatures.join(', ') || 'None specified'}
            </div>
          </>
        )}

        {/* Car Overview Section */}


        
        <hr className="border-t border-blue-600 mb-4"/>
        {carSpecifications && (
          <>
            <h2 className="text-lg font-semibold mb-2">D. Car Specifications: {carSpecifications.Model} {carSpecifications.Version}</h2>
            <div className="flex justify-start">
              <table className="table-auto w-1/2 mb-4 border-collapse border border-gray-300 text-xs">
                <thead>
                  <tr>
                    <th className="font-semibold border border-gray-300 p-1" colSpan="2">Key Highlights</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td className="font-semibold border border-gray-300 p-1">Price</td>
                    <td className="border border-gray-300 p-1">₹{carSpecifications['On Road Price(Rs']["$numberInt"]}</td>
                  </tr>
                  <tr>
                    <td className="font-semibold border border-gray-300 p-1">Fuel Type</td>
                    <td className="border border-gray-300 p-1">{carSpecifications.Fuel_Type}</td>
                  </tr>
                  <tr>
                    <td className="font-semibold border border-gray-300 p-1">Transmission</td>
                    <td className="border border-gray-300 p-1">{carSpecifications.Transmission_Type}</td>
                  </tr>
                  <tr>
                    <td className="font-semibold border border-gray-300 p-1">Car Type</td>
                    <td className="border border-gray-300 p-1">{carSpecifications.Body_Type}</td>
                  </tr>
                  <tr>
                    <td className="font-semibold border border-gray-300 p-1">Mileage</td>
                    <td className="border border-gray-300 p-1">{carSpecifications.Mileage_ARAI} KMPL</td>
                  </tr>
                  <tr>
                    <td className="font-semibold border border-gray-300 p-1">Engine</td>
                    <td className="border border-gray-300 p-1">{carSpecifications.Engine_Power_cc} CC, {carSpecifications.Engine_Specification}</td>
                  </tr>
                  <tr>
                    <td className="font-semibold border border-gray-300 p-1">Safety</td>
                    <td className="border border-gray-300 p-1">5 Star Global NCAP</td>
                  </tr>
                  <tr>
                    <td className="font-semibold border border-gray-300 p-1">Emission Standard</td>
                    <td className="border border-gray-300 p-1">{carSpecifications.Emission_Standard}</td>
                  </tr>
                </tbody>
              </table>
              <div className="ml-4">
                <Image src={'/public/Car Image Dataset/tata_altroz_black.png'} alt={`${carSpecifications.Model} ${carSpecifications.Version}`} width={300} height={200} />
              </div>
            </div>
          </>
        )}

        {/* Footer Section */}
        <div className="mt-4 pt-4 border-t border-blue-600 text-sm flex justify-between items-center">
          <span><strong>Date:</strong> {getCurrentDate()}</span>
          <span><strong>Generated By:</strong> {generatedByEmail}</span> {/* Use fetched email */}
          <span>Page 1 of 1</span> {/* You can adjust this to dynamically display page numbers if using a PDF library */}
        </div>
      </div>

      {/* Button Container */}
      <div className="flex justify-between w-full max-w-4xl mt-6">
        {/* Back Button */}
        <button
          onClick={handleBack}
          className="px-8 py-2 text-lg font-semibold text-indigo-700 border border-indigo-700 rounded-lg hover:bg-indigo-100 transition duration-300"
        >
          Back to Recommendation
        </button>

        {/* Print Button */}
        <button
          onClick={handlePrint}
          className="px-8 py-2 text-lg font-semibold text-gray-700 border border-gray-400 rounded-lg hover:bg-gray-100 transition duration-300"
        >
          Print Proposal
        </button>

        {/* Validate Proposal Button */}
        <button
          onClick={handleValidate}
          className="px-8 py-2 text-lg font-semibold text-white bg-blue-600 border border-blue-600 rounded-lg hover:bg-blue-700 transition duration-300"
        >
          Validate Proposal
        </button>
      </div>
    </div>
  );
};

export default PreviewProposal;
